window.SIDEBAR_ITEMS = {"constant":[["STORAGE_PROGRAM_PAGES_PREFIX",""],["STORAGE_PROGRAM_PREFIX",""],["STORAGE_PROGRAM_STATE_WAIT_PREFIX",""]],"enum":[["CommonError",""],["Program",""],["ProgramState","Enumeration contains variants for program state."]],"fn":[["get_active_program",""],["get_program",""],["get_program_data_for_pages","Returns program data for each page from `pages`."],["get_program_data_for_pages_optional","Returns program data for each page from `pages`, which has data in storage."],["get_program_page_data","Returns mem page data from storage for program `id` and `page_idx`"],["get_program_pages_data","Returns data for all program pages, that have data in storage."],["pages_prefix",""],["program_exists",""],["program_key",""],["remove_program_page_data",""],["reset_storage",""],["set_program",""],["set_program_allocations",""],["set_program_and_pages_data",""],["set_program_exited_status",""],["set_program_initialized",""],["set_program_page_data",""],["set_program_terminated_status",""],["waiting_init_append_message_id",""],["waiting_init_prefix",""],["waiting_init_take_messages",""]],"macro":[["wrap_counted_storage_map","Same as `wrap_storage_map!`, but with length type parameter to auto-impl `Counted` trait of `gear_common` storage primitives."],["wrap_extended_storage_double_map","Same as `wrap_storage_double_map!`, but with extra implementations of `CountedByKey`, `IterableMap` and `IterableByKeyMap` over double map values."],["wrap_storage_double_map","Creates new type with specified name and key1-key2-value types and implements `DoubleMapStorage` for it based on specified storage, which is a `Substrate`’s `StorageDoubleMap`."],["wrap_storage_map","Creates new type with specified name and key-value types and implements `MapStorage` for it based on specified storage, which is a `Substrate`’s `StorageMap`."],["wrap_storage_value","Creates new type with specified name and value type and implements `ValueStorage` for it based on specified storage, which is a `Substrate`’s `StorageValue`."]],"mod":[["code_storage",""],["event","Gear events additional data."],["gas_provider",""],["scheduler","Module for scheduler implementation."],["storage","Gear’s storage API module."]],"struct":[["ActiveProgram",""],["CodeMetadata",""],["PageIsNotAllocatedErr",""]],"trait":[["BlockLimiter","Contains various limits for the block."],["ExtractCall","A trait whose purpose is to extract the `Call` variant of an extrinsic"],["GasPrice",""],["Origin",""],["PaymentProvider",""],["QueueRunner",""]],"type":[["ExitCode",""]]};